The 'lister' library is a set of semi-graphical user interface functions:
                      .------------------------------------------.
---------------------( Shared class .. General-purpose functions  )----------------------
                      '------------------------------------------'
DoHeading       Clears the active window and prints a heading.
                Uses the global variable 'Backtitle' for the heading.
                Returns: No values are set.
-----------------------------------------------------------------------------------------
DoForm          Prints a centred prompt for user to enter data.
                Expects one parameter: 
                $1 A short text message to instruct the user.
                Sets $Gstring with the text entered by the user.
-----------------------------------------------------------------------------------------
DoMessage       Prints an informative message in a pop-up terminal.
                Parameters: One or two text messages:
                DoMessage "Sorry, 'file.name' not found" "I cannot go on like this"
                Returns: No values are set
-----------------------------------------------------------------------------------------
DoEnum          Enumerates words in a string
                Parameters:
                $1 A string of words; $2 Either a word or a number to be looked up in $1.
                If $2 is not passed, DoEnum will return the total number of words in $1.
                Sets the return code $? to the number of the word, and ...
                global variable $Gstring to the word at that number.
----------------------------------------------------------------------------------------
DoYesNo         A really simple yes/no prompt
                Parameter:
                $1 A short line of text to which the answer can be yes or no.
                Sets the return code $? to 1 (yes) or 2 (no) and ...
                global variable $Gstring to 'Yes' or 'No'.
----------------------------------------------------------------------------------------
DoRadio         Prints up to four columns of radio buttons. The user moves the cursor
                using the cursor keys, and marks one button in each column by pressing 'x'
                Parameters:
                $1 Headline text; $2 (and optional $3, $4 & $5) prompt text for the radio
                buttons (strings of space-separated one-word prompts).
                The first item in each of $2, $3, $4 & $5 are column headings (required)
                Sets Gstring with the position of the selected item in each column
                (eg: 4 1 5 2) You can then relate each number to the original string
                variable using the DoEnum function.
RadioColumn     (Used by DoRadio - Not intended for direct access by external processes)
                Handles printing of one column - the header, the items in it, and the buttons.
                Parameters (all generated and passed by DoRadio):
                $1 items in this column; $2 total number of columns;
                $3 the number of the current column to be printed (1 to 4)
                $4 The startpoint (how many characters in from the left;
                $5 The length of the longest item in the current column.
RadioSelect     (Used by DoRadio - Not intended for direct access by external processes)
                Highlights the top radio button of the first column, then the next one as
                the cursor is moved vertically. Switches columns according to horizontal
                cursor movement. Marks an item as selected or deselected if the user
                presses 'x'. Also unmarks a previously selected item in the column if the
                user selects a different one.
                Parameters (all generated and passed by DoRadio):
                $1 number of columns (to monitor column switching) generated by DoRadio;
                $2 firstpoint (initially column1)
                $3 a string containing the lengths of the longest items in each column
                $4 a string containing the number of items in each column
                    .-------------------------------------------.
-------------------(  Menu class .. Displaying and using menus   )----------------------
                    '-------------------------------------------'
DoMenu          Generates a simple menu of one-word items, centred on the page.
                Parameters:
                $1 String of single-word menu items, or the name of a file 
                containing those items ...
                   (max 15 advised, as we don't want to go off the screen, do we?);
                $2 Button text, eg: 'Ok Exit';
                $3 May be a prompt message or empty.
                Sets Gnumber to the position of the selected item in the menu, and
                Gstring with the text of the selected item.
                Sets the return code $? to the number of the button selected.
-----------------------------------------------------------------------------------------
DoLongMenu      Generates a menu of multi-word items.
                Parameters:
                $1 The name of a file containing the verbose menu items;
                $2 Optional button text, eg: 'Ok Exit'
                      (if empty will default to 'Ok Exit');
                $3 Optional message
                      (if $3 is required, $2 must be passed, even if null);
                Notes:
                DoLongMenu requires the named file to exist, or it will abort.
                The named file containing the verbose menu items ...
                      1) Should have one item to a line; 
                      2) Each line no longer than 50 characters, and
                      3) No more than 20 items ...
                          (we don't want to go off the screen, do we?)
                Sets Gnumber to the position of the selected item in the menu, and
                Gstring with the text of the selected item.
                Sets the return code $? to the number of the button selected.
PrintButtons    (Used by the menu functions - Not intended for access by external processes)
                Prints a row of buttons.
                Parameters: 
                $1 Button text (eg: "Ok" for one button, or "Yes No" for two; 
                $2 Which button to highlight (numeric: 1=left or 2=right);
                $3 The row of the window on which the buttons are to be printed:
                     (this should normally be within the range 0 to 24);
                Sets the return code $? to the number of the button selected.
SwitchButtons   (Used by the menu functions - Not intended for access by external processes)
                Alternates between two buttons
                Parameter: Number of the currently selected button
-----------------------------------------------------------------------------------------
DoFirstItem     Prints a single item, centred, at the top of the page.
                Parameter: 
                $1 Text to print;
                Sets $Gstring for any successive print instructions.
-----------------------------------------------------------------------------------------
DoNextItem      Prints the next item of a menu
                Parameters:
                $1 Item text.
                Sets $Gstring for any successive print instructions.
-----------------------------------------------------------------------------------------
DoPrintRev      Prints an item in reverse text colour, matched to the length of the longest
                item in the menu. Used by DoMenu and DoLongMenu, but also available for
                other uses.
                Parameters:
                $1 Length of the longest menu item (in characters);
                $2 Item text
                Sets $Gstring for any successive print instructions.
------------------------------------------------------------------------------
DoKeypress      Used by DoMenu and DoLongMenu, but also available for other uses.
                Responds to user keypress (cursor keys and Enter)...
                No parameters.
                Sets $Gnumber with a number representing the key pressed:
                      (0=Enter; 1=Up; 2=Left; 3=Down; 4=Right)
               .---------------------------------------------------------.
--------------(  List class .. Display long lists and accept user input   )--------------
               '---------------------------------------------------------'
DoLister        Prepares arrays for use by DoSelectPage and DoPrintPage
                to generate a (potentially multi-page) numbered list from a
                file.
                Parameter: $1 The name of the file containing the list
                Requirement:
                The calling function must first create the file containing the
                items to be listed, before calling DoLister.
                The file name must be passed to DoLister as $1;
                The file must have one word per item, one item per line.
                Returns: No values are set by DoLister itself (return values
                are set by DoPrintPage)
ListerSelectPage (Used by DoLister to manage page handling - Not intended for direct
                access by external processes)
                The arrays used here are declared and initialised in DoLister as global in scope.
                Parameters (all set by DoLister):
                $1 = winHeight; $2 = winCentre; $3 lastPage;
                Returns: No values are set by DoSelectPage (return values are
                set by DoPrintPage)
ListerPrintPage (Used by DoLister - Not intended for direct access by external processes)
                Displays the selected page, then waits for the user to enter a number. The
                items are printed in columns.
                Parameters (all set by ListerSelectPage):
                $1 winHeight; $2 winCentre; $3 instructions;
                $4 pageNumber; $5 lastItem
                The arrays used here are declared and initialised in DoLister as global in scope
                Sets $Gnumber to the user input (item number)
                and $Gstring to the detail of the menu item.
-----------------------------------------------------------------------------------------
DoMega          Generates a (potentially multi-page) numbered list from a file
                of crude data prepared by the calling program.
                Parameters:
                $1 Name of the file containing all the items;
                $2 Search term; $3 ignore (y/n)
MegaPage        (Used by DoMega - Not intended for direct access by external processes)
                Does the actual printing bit for DoMega.
                Parameters: $1 pageNumber; $2 pages; $3 display; $4 items; $5 counter

-----------------------------------------------------------------------------------------
Revised 2021/08/25 for v2.00 by Elizabeth Mills